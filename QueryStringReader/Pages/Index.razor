@page "/"
@inject NavigationManager NavManager

<h1>Welcome to Query String Reader!</h1>

<p>Send your URL redirects to this address, and easily view and copy the query string and fragment values. <a href="/?foo=bar#baz=qux">Try it out.</a></p>

<hr/>

<h3>Query String Parameters</h3>

@if (_queryStringParameters.Any())
{
    <table>
        @foreach (var query in _queryStringParameters)
        {
            <tr>
                <td class="cell">@query.Key:</td>
                <td class="cell copy">@query.Value<button style="margin: 0 0 0 20px" class="button-4" onclick="copyToClipboard('@query.Value')"><span class="oi oi-clipboard" aria-hidden="true"></span></button></td>
            </tr>
        }
    </table>
}
else
{
    <p>No query string parameters detected.</p>
}

<h3>Fragments</h3>

@if (_fragmentParameters.Any())
{
    <table>
        @foreach (var fragment in _fragmentParameters)
        {
            <tr>
                <td class="cell">@fragment.Key:</td>
                <td class="cell copy">@fragment.Value<button style="margin: 0 0 0 20px" class="button-4" onclick="copyToClipboard('@fragment.Value')"><span class="oi oi-clipboard" aria-hidden="true"></span></button></td>
            </tr>
        }
    </table>
}
else
{
    <p>No fragment string detected.</p>
}

@code {
    protected override void OnInitialized()
    {
        NavManager.LocationChanged += NavManager_LocationChanged;
        
        // This handles the initial page load
        ParseUri(NavManager.Uri);
    }

    void NavManager_LocationChanged(object sender, LocationChangedEventArgs e)
    {
        // This handles url changes without reloading the page
        ParseUri(e.Location);
    }

    private void ParseUri(string uriStr)
    {
        _queryStringParameters.Clear();
        _fragmentParameters.Clear();

        var uri = new Uri(uriStr);
        foreach (var queryParameter in QueryHelpers.ParseQuery(uri.Query))
        {
            _queryStringParameters.Add(queryParameter.Key, queryParameter.Value);
        }

        foreach (var fragmentParameter in QueryHelpers.ParseQuery(uri.Fragment))
        {
            string key = fragmentParameter.Key;

            if (key.StartsWith('#') == true)
            {
                key = key.Substring(1, key.Length - 1);
            }

            _fragmentParameters.Add(key, fragmentParameter.Value);
        }

        // This forces the HTML to rerender even if the page isn't reloaded
        StateHasChanged();
    }

    private readonly Dictionary<string, string> _queryStringParameters = new Dictionary<string, string>();

    private readonly Dictionary<string, string> _fragmentParameters = new Dictionary<string, string>();
}